<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.geilove.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="org.geilove.pojo.User" >
    <id column="userID" property="userid" jdbcType="BIGINT" />
    <result column="digital" property="digital" jdbcType="BIGINT" />
    <result column="userNickName" property="usernickname" jdbcType="VARCHAR" />
    <result column="userEMail" property="useremail" jdbcType="VARCHAR" />
    <result column="userPassword" property="userpassword" jdbcType="VARCHAR" />
    <result column="userType" property="usertype" jdbcType="TINYINT" />
    <result column="certificateType" property="certificatetype" jdbcType="TINYINT" />
    <result column="realName" property="realname" jdbcType="VARCHAR" />
    <result column="identityCard" property="identitycard" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="selfIntroduce" property="selfintroduce" jdbcType="VARCHAR" />
    <result column="userTag" property="usertag" jdbcType="VARCHAR" />
    <result column="university" property="university" jdbcType="VARCHAR" />
    <result column="collegeYear" property="collegeyear" jdbcType="DATE" />
    <result column="universityTwo" property="universitytwo" jdbcType="VARCHAR" />
    <result column="collegeYearTwo" property="collegeyeartwo" jdbcType="DATE" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="registerDate" property="registerdate" jdbcType="TIMESTAMP" />
    <result column="msgPubCount" property="msgpubcount" jdbcType="INTEGER" />
    <result column="boxCount" property="boxcount" jdbcType="INTEGER" />
    <result column="fansCount" property="fanscount" jdbcType="INTEGER" />
    <result column="followCount" property="followcount" jdbcType="INTEGER" />
    <result column="notSay" property="notsay" jdbcType="TINYINT" />
    <result column="notSayTime" property="notsaytime" jdbcType="TIMESTAMP" />
    <result column="canSayTime" property="cansaytime" jdbcType="TIMESTAMP" />
    <result column="userPhoto" property="userphoto" jdbcType="VARCHAR" />
    <result column="photoUpload" property="photoupload" jdbcType="TINYINT" />
    <result column="backupOne" property="backupone" jdbcType="VARCHAR" />
    <result column="backupTwo" property="backuptwo" jdbcType="VARCHAR" />
    <result column="backupThree" property="backupthree" jdbcType="VARCHAR" />
    <result column="backupFour" property="backupfour" jdbcType="VARCHAR" />
    <result column="backupFive" property="backupfive" jdbcType="INTEGER" />
    <result column="backupSix" property="backupsix" jdbcType="INTEGER" />
    <result column="userHelpsMan" property="userhelpsman" jdbcType="INTEGER" />
    <result column="userDonate" property="userdonate" jdbcType="INTEGER" />
    <result column="amountAccept" property="amountaccept" jdbcType="INTEGER" />
    <result column="acceptMoney" property="acceptmoney" jdbcType="INTEGER" />
    <result column="beHelpTime" property="behelptime" jdbcType="TIMESTAMP" />
    <result column="beHelpedType" property="behelpedtype" jdbcType="INTEGER" />
    <result column="backupseven" jdbcType="VARCHAR" property="backupseven" />
    <result column="backupeight" jdbcType="VARCHAR" property="backupeight" />
    <result column="backupnine" jdbcType="VARCHAR" property="backupnine" />
    <result column="backupten" jdbcType="VARCHAR" property="backupten" />
    <result column="tobeuseone" jdbcType="INTEGER" property="tobeuseone" />
    <result column="tobeusetwo" jdbcType="INTEGER" property="tobeusetwo" />
    <result column="tobeusethree" jdbcType="INTEGER" property="tobeusethree" />
    <result column="cityName" property="cityname" jdbcType="VARCHAR" />
    <result column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="userUUID" property="useruuid" jdbcType="VARCHAR" />
  </resultMap>


  <!--  自定义，爱心社列表，志愿者列表 监督用户列表 ，loadMore-->
  <select id="selectMenListLoadMore" resultMap="BaseResultMap" >
    select      
	   <include refid="Base_Column_List" />
    from 
    	user
    where 
     	userType= #{tag,jdbcType=INTEGER} AND registerDate &lt; #{lastTime}
    order by 
     	registerDate  desc
    limit 
     	#{page, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}    
  </select>
  <!--自定义结束 -->

   <!-- 公益排行榜，-->
  <select id="gongyiMenListloadMore" resultMap="BaseResultMap" >
    select      
	   <include refid="Base_Column_List" />
    from 
    	user
    where 
     	tobeuseone= 2 AND userDonate &lt; #{money}
    order by 
     	userDonate  desc
    limit 
     	#{page, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}    
  </select>
  <!-- 公益排行榜结束 -->
  
  
  <!--  自定义，根据一组ids获取用户信息,列表,在我关注的人使用了-->
  <select id="getPayOrWatchPeople" resultMap="BaseResultMap" >
    select      
	   <include refid="Base_Column_List" />
    from user
    where userID  in
         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
               #{item}
        </foreach>       
  </select>
  <!--自定义结束 -->
  <!--自定义，用于用户密码验证-->
  <select id="selectMD5Password" resultType="java.lang.String"  parameterType="java.lang.Long">
    select      
	    userPassword
    from user
    where userID= #{userid}             
  </select>
  <!--自定义结束 -->
  <!--自定义，用于找回密码-->
  <select id="findPasswd" resultType="java.lang.String"  parameterType="java.lang.String">
    select      
	    userPassword
    from user
    where userEMail= #{userEmail}             
  </select>
  <!--自定义结束 -->
  <!--  自定义，获取昵称 头像 简介部分信息-->
  <select id="selectUserPartProfile" resultType="org.geilove.sqlpojo.OtherPartHelpPojo" >
    select      
	    userID,userNickName, selfIntroduce, userPhoto, photoUpload
    from user
    where userID  in
         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
               #{item}
        </foreach>       
  </select>
  <!--自定义结束 -->

  <!--这个是自定义的返回部分字段的，不知道行不行啊 -->
  <resultMap id="UserPhotoResultMap" type="org.geilove.vo.UserPhotoUrl" >
     <id column="userID" property="userid" jdbcType="BIGINT" />
     <result column="userPhoto" property="userphoto" jdbcType="VARCHAR" />
  </resultMap>
   
  <sql id="UserPhotoList" >
    userID, userPhoto
  </sql>
  
  <!--  自定义，获得用户的头像-->
  <select id="selectUserPhotos" resultMap="UserPhotoResultMap" >
    select 
    <include refid="UserPhotoList" />
    from  user 
    where userID  in
         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
               #{item}
       </foreach>
  </select>
  <!--自定义返回用户头像的结束 -->
   
  <sql id="Base_Column_List" >
    userID, digital, userNickName, userEMail, userPassword, userType, certificateType, 
    realName, identityCard, sex, selfIntroduce, userTag, university, collegeYear, universityTwo, 
    collegeYearTwo, company, address, country, registerDate, msgPubCount, boxCount, fansCount, 
    followCount, notSay, notSayTime, canSayTime, userPhoto, photoUpload, backupOne, backupTwo, 
    backupThree, backupFour, backupFive, backupSix,userHelpsMan,userDonate,amountAccept,acceptMoney,beHelpTime,beHelpedType,
    backupseven, backupeight, backupnine, backupten, 
    tobeuseone, tobeusetwo, tobeusethree, cityName, openId, userUUID
  </sql>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userID = #{userid,jdbcType=BIGINT}
  </select>

  <!--根据用户的UUId 选择用户，-->
  <select id="selectByUUID" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from user
    where userUUID=#{userUUID,jdbcType=VARCHAR}
  </select>
  <!--根据用户的openId 选择用户，-->
  <select id="selectByopenId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from user
    where openId=#{openId,jdbcType=VARCHAR}
  </select>
  <!-- 以下是自定义的,根据用户昵称或者邮箱选择出记录，-->
  <select id="selectByNicknameOrEmail" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select
    <include refid="Base_Column_List" />
    from user
    where userEmail=#{userEmail,jdbcType=VARCHAR} OR userNickName=#{userNickname,jdbcType=VARCHAR}
  </select>
  <!-- 以下是自定义的,根据用户的邮箱选出用户的信息-->
  <select id="selectByUserEmail" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select
  	<include refid="Base_Column_List" />
  	from user
  	where userEmail=#{useremail,jdbcType=VARCHAR}
  </select>
  <!-- 以下是自定义的,根据用户的昵称选出用户的信息-->
  <select id="selectByUserNickName" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select
  	<include refid="Base_Column_List" />
  	from user
  	where userNickName=#{usernickname,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where userID = #{userid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.geilove.pojo.User" >
    insert into user (userID, digital, userNickName, 
      userEMail, userPassword, userType, 
      certificateType, realName, identityCard, 
      sex, selfIntroduce, userTag, 
      university, collegeYear, universityTwo, 
      collegeYearTwo, company, address, 
      country, registerDate, msgPubCount, 
      boxCount, fansCount, followCount, 
      notSay, notSayTime, canSayTime, 
      userPhoto, photoUpload, backupOne, 
      backupTwo, backupThree, backupFour, 
      backupFive, backupSix,userHelpsMan,userDonate,amountAccept,acceptMoney,beHelpTime,beHelpedType,
      backupseven, 
      backupeight, backupnine, backupten, 
      tobeuseone, tobeusetwo, tobeusethree,cityName, openId, userUUID)
    values (#{userid,jdbcType=BIGINT}, #{digital,jdbcType=BIGINT}, #{usernickname,jdbcType=VARCHAR}, 
      #{useremail,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, #{usertype,jdbcType=TINYINT}, 
      #{certificatetype,jdbcType=TINYINT}, #{realname,jdbcType=VARCHAR}, #{identitycard,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{selfintroduce,jdbcType=VARCHAR}, #{usertag,jdbcType=VARCHAR}, 
      #{university,jdbcType=VARCHAR}, #{collegeyear,jdbcType=DATE}, #{universitytwo,jdbcType=VARCHAR}, 
      #{collegeyeartwo,jdbcType=DATE}, #{company,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{registerdate,jdbcType=TIMESTAMP}, #{msgpubcount,jdbcType=INTEGER}, 
      #{boxcount,jdbcType=INTEGER}, #{fanscount,jdbcType=INTEGER}, #{followcount,jdbcType=INTEGER}, 
      #{notsay,jdbcType=TINYINT}, #{notsaytime,jdbcType=TIMESTAMP}, #{cansaytime,jdbcType=TIMESTAMP}, 
      #{userphoto,jdbcType=VARCHAR}, #{photoupload,jdbcType=TINYINT}, #{backupone,jdbcType=VARCHAR}, 
      #{backuptwo,jdbcType=VARCHAR}, #{backupthree,jdbcType=VARCHAR}, #{backupfour,jdbcType=VARCHAR}, 
      #{backupfive,jdbcType=INTEGER}, #{backupsix,jdbcType=INTEGER}, #{userhelpsman,jdbcType=INTEGER},
      #{userdonate,jdbcType=INTEGER},#{amountaccept,jdbcType=INTEGER},#{acceptmoney,jdbcType=INTEGER},
      #{behelptime,jdbcType=TIMESTAMP},#{behelpedtype,jdbcType=INTEGER},
      #{backupseven,jdbcType=VARCHAR}, 
      #{backupeight,jdbcType=VARCHAR}, #{backupnine,jdbcType=VARCHAR}, #{backupten,jdbcType=VARCHAR}, 
      #{tobeuseone,jdbcType=INTEGER}, #{tobeusetwo,jdbcType=INTEGER}, #{tobeusethree,jdbcType=INTEGER},
      #{cityname,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, #{useruuid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.geilove.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userID,
      </if>
      <if test="digital != null" >
        digital,
      </if>
      <if test="usernickname != null" >
        userNickName,
      </if>
      <if test="useremail != null" >
        userEMail,
      </if>
      <if test="userpassword != null" >
        userPassword,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="certificatetype != null" >
        certificateType,
      </if>
      <if test="realname != null" >
        realName,
      </if>
      <if test="identitycard != null" >
        identityCard,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="selfintroduce != null" >
        selfIntroduce,
      </if>
      <if test="usertag != null" >
        userTag,
      </if>
      <if test="university != null" >
        university,
      </if>
      <if test="collegeyear != null" >
        collegeYear,
      </if>
      <if test="universitytwo != null" >
        universityTwo,
      </if>
      <if test="collegeyeartwo != null" >
        collegeYearTwo,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="registerdate != null" >
        registerDate,
      </if>
      <if test="msgpubcount != null" >
        msgPubCount,
      </if>
      <if test="boxcount != null" >
        boxCount,
      </if>
      <if test="fanscount != null" >
        fansCount,
      </if>
      <if test="followcount != null" >
        followCount,
      </if>
      <if test="notsay != null" >
        notSay,
      </if>
      <if test="notsaytime != null" >
        notSayTime,
      </if>
      <if test="cansaytime != null" >
        canSayTime,
      </if>
      <if test="userphoto != null" >
        userPhoto,
      </if>
      <if test="photoupload != null" >
        photoUpload,
      </if>
      <if test="backupone != null" >
        backupOne,
      </if>
      <if test="backuptwo != null" >
        backupTwo,
      </if>
      <if test="backupthree != null" >
        backupThree,
      </if>
      <if test="backupfour != null" >
        backupFour,
      </if>
      <if test="backupfive != null" >
        backupFive,
      </if>
      <if test="backupsix != null" >
        backupSix,
      </if>
       <if test="userhelpsman != null" >
        userHelpsMan,
      </if>
       <if test="userdonate != null" >
        userDonate,
      </if>
       <if test="amountaccept != null" >
        amountAccept,
      </if>
       <if test="acceptmoney != null" >
        acceptMoney,
      </if>
       <if test="behelptime != null" >
        beHelpTime,
      </if>
       <if test="behelpedtype != null" >
        beHelpedType,
      </if>
      <if test="backupseven != null">
        backupseven,
      </if>
      <if test="backupeight != null">
        backupeight,
      </if>
      <if test="backupnine != null">
        backupnine,
      </if>
      <if test="backupten != null">
        backupten,
      </if>
      <if test="tobeuseone != null">
        tobeuseone,
      </if>
      <if test="tobeusetwo != null">
        tobeusetwo,
      </if>
      <if test="tobeusethree != null">
        tobeusethree,
      </if>
      <if test="cityname != null" >
        cityName,
      </if>
      <if test="openid != null" >
        openId,
      </if>
      <if test="useruuid != null" >
        userUUID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="digital != null" >
        #{digital,jdbcType=BIGINT},
      </if>
      <if test="usernickname != null" >
        #{usernickname,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=TINYINT},
      </if>
      <if test="certificatetype != null" >
        #{certificatetype,jdbcType=TINYINT},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="identitycard != null" >
        #{identitycard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="selfintroduce != null" >
        #{selfintroduce,jdbcType=VARCHAR},
      </if>
      <if test="usertag != null" >
        #{usertag,jdbcType=VARCHAR},
      </if>
      <if test="university != null" >
        #{university,jdbcType=VARCHAR},
      </if>
      <if test="collegeyear != null" >
        #{collegeyear,jdbcType=DATE},
      </if>
      <if test="universitytwo != null" >
        #{universitytwo,jdbcType=VARCHAR},
      </if>
      <if test="collegeyeartwo != null" >
        #{collegeyeartwo,jdbcType=DATE},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="registerdate != null" >
        #{registerdate,jdbcType=TIMESTAMP},
      </if>
      <if test="msgpubcount != null" >
        #{msgpubcount,jdbcType=INTEGER},
      </if>
      <if test="boxcount != null" >
        #{boxcount,jdbcType=INTEGER},
      </if>
      <if test="fanscount != null" >
        #{fanscount,jdbcType=INTEGER},
      </if>
      <if test="followcount != null" >
        #{followcount,jdbcType=INTEGER},
      </if>
      <if test="notsay != null" >
        #{notsay,jdbcType=TINYINT},
      </if>
      <if test="notsaytime != null" >
        #{notsaytime,jdbcType=TIMESTAMP},
      </if>
      <if test="cansaytime != null" >
        #{cansaytime,jdbcType=TIMESTAMP},
      </if>
      <if test="userphoto != null" >
        #{userphoto,jdbcType=VARCHAR},
      </if>
      <if test="photoupload != null" >
        #{photoupload,jdbcType=TINYINT},
      </if>
      <if test="backupone != null" >
        #{backupone,jdbcType=VARCHAR},
      </if>
      <if test="backuptwo != null" >
        #{backuptwo,jdbcType=VARCHAR},
      </if>
      <if test="backupthree != null" >
        #{backupthree,jdbcType=VARCHAR},
      </if>
      <if test="backupfour != null" >
        #{backupfour,jdbcType=VARCHAR},
      </if>
      <if test="backupfive != null" >
        #{backupfive,jdbcType=INTEGER},
      </if>
      <if test="backupsix != null" >
        #{backupsix,jdbcType=INTEGER},
      </if>
      <if test="userhelpsman != null" >
        #{userhelpsman,jdbcType=INTEGER},
      </if>
       <if test="userdonate != null" >
        #{userdonate,jdbcType=INTEGER},
      </if>
      <if test="amountaccept != null" >
        #{amountaccept,jdbcType=INTEGER},
      </if>
      <if test="acceptmoney != null" >
        #{acceptmoney,jdbcType=INTEGER},
      </if>
      <if test="behelptime != null" >
        #{behelptime,jdbcType=TIMESTAMP},
      </if>
       <if test="behelpedtype != null" >
        #{behelpedtype,jdbcType=INTEGER},
      </if>
      <if test="backupseven != null">
        #{backupseven,jdbcType=VARCHAR},
      </if>
      <if test="backupeight != null">
        #{backupeight,jdbcType=VARCHAR},
      </if>
      <if test="backupnine != null">
        #{backupnine,jdbcType=VARCHAR},
      </if>
      <if test="backupten != null">
        #{backupten,jdbcType=VARCHAR},
      </if>
      <if test="tobeuseone != null">
        #{tobeuseone,jdbcType=INTEGER},
      </if>
      <if test="tobeusetwo != null">
        #{tobeusetwo,jdbcType=INTEGER},
      </if>
      <if test="tobeusethree != null">
        #{tobeusethree,jdbcType=INTEGER},
      </if>
      <if test="cityname != null" >
        #{cityname,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="useruuid != null" >
        #{useruuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.geilove.pojo.User" >
    update user
    <set >
      <if test="digital != null" >
        digital = #{digital,jdbcType=BIGINT},
      </if>
      <if test="usernickname != null" >
        userNickName = #{usernickname,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        userEMail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null" >
        userPassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=TINYINT},
      </if>
      <if test="certificatetype != null" >
        certificateType = #{certificatetype,jdbcType=TINYINT},
      </if>
      <if test="realname != null" >
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="identitycard != null" >
        identityCard = #{identitycard,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="selfintroduce != null" >
        selfIntroduce = #{selfintroduce,jdbcType=VARCHAR},
      </if>
      <if test="usertag != null" >
        userTag = #{usertag,jdbcType=VARCHAR},
      </if>
      <if test="university != null" >
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="collegeyear != null" >
        collegeYear = #{collegeyear,jdbcType=DATE},
      </if>
      <if test="universitytwo != null" >
        universityTwo = #{universitytwo,jdbcType=VARCHAR},
      </if>
      <if test="collegeyeartwo != null" >
        collegeYearTwo = #{collegeyeartwo,jdbcType=DATE},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="registerdate != null" >
        registerDate = #{registerdate,jdbcType=TIMESTAMP},
      </if>
      <if test="msgpubcount != null" >
        msgPubCount = #{msgpubcount,jdbcType=INTEGER},
      </if>
      <if test="boxcount != null" >
        boxCount = #{boxcount,jdbcType=INTEGER},
      </if>
      <if test="fanscount != null" >
        fansCount = #{fanscount,jdbcType=INTEGER},
      </if>
      <if test="followcount != null" >
        followCount = #{followcount,jdbcType=INTEGER},
      </if>
      <if test="notsay != null" >
        notSay = #{notsay,jdbcType=TINYINT},
      </if>
      <if test="notsaytime != null" >
        notSayTime = #{notsaytime,jdbcType=TIMESTAMP},
      </if>
      <if test="cansaytime != null" >
        canSayTime = #{cansaytime,jdbcType=TIMESTAMP},
      </if>
      <if test="userphoto != null" >
        userPhoto = #{userphoto,jdbcType=VARCHAR},
      </if>
      <if test="photoupload != null" >
        photoUpload = #{photoupload,jdbcType=TINYINT},
      </if>
      <if test="backupone != null" >
        backupOne = #{backupone,jdbcType=VARCHAR},
      </if>
      <if test="backuptwo != null" >
        backupTwo = #{backuptwo,jdbcType=VARCHAR},
      </if>
      <if test="backupthree != null" >
        backupThree = #{backupthree,jdbcType=VARCHAR},
      </if>
      <if test="backupfour != null" >
        backupFour = #{backupfour,jdbcType=VARCHAR},
      </if>
      <if test="backupfive != null" >
        backupFive = #{backupfive,jdbcType=INTEGER},
      </if>
      <if test="backupsix != null" >
        backupSix = #{backupsix,jdbcType=INTEGER},
      </if>
       <if test="userhelpsman != null" >
        userHelpsMan = #{userhelpsman,jdbcType=INTEGER},
      </if>
       <if test="userdonate != null" >
        userDonate = #{userdonate,jdbcType=INTEGER},
      </if>
      <if test="amountaccept != null" >
        amountAccept = #{amountaccept,jdbcType=INTEGER},
      </if>
       <if test="acceptmoney != null" >
        acceptMoney = #{acceptmoney,jdbcType=INTEGER},
      </if>
      <if test="behelptime != null" >
        beHelpTime = #{behelptime,jdbcType=TIMESTAMP},
      </if>
       <if test="behelpedtype != null" >
        beHelpedType = #{behelpedtype,jdbcType=INTEGER},
      </if>
      <if test="backupseven != null">
        backupseven = #{backupseven,jdbcType=VARCHAR},
      </if>
      <if test="backupeight != null">
        backupeight = #{backupeight,jdbcType=VARCHAR},
      </if>
      <if test="backupnine != null">
        backupnine = #{backupnine,jdbcType=VARCHAR},
      </if>
      <if test="backupten != null">
        backupten = #{backupten,jdbcType=VARCHAR},
      </if>
      <if test="tobeuseone != null">
        tobeuseone = #{tobeuseone,jdbcType=INTEGER},
      </if>
      <if test="tobeusetwo != null">
        tobeusetwo = #{tobeusetwo,jdbcType=INTEGER},
      </if>
      <if test="tobeusethree != null">
        tobeusethree = #{tobeusethree,jdbcType=INTEGER},
      </if>
      <if test="cityname != null" >
        cityName = #{cityname,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openId = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="useruuid != null" >
        userUUID = #{useruuid,jdbcType=VARCHAR},
      </if>
    </set>
    where userID = #{userid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.geilove.pojo.User" >
    update user
    set digital = #{digital,jdbcType=BIGINT},
      userNickName = #{usernickname,jdbcType=VARCHAR},
      userEMail = #{useremail,jdbcType=VARCHAR},
      userPassword = #{userpassword,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=TINYINT},
      certificateType = #{certificatetype,jdbcType=TINYINT},
      realName = #{realname,jdbcType=VARCHAR},
      identityCard = #{identitycard,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      selfIntroduce = #{selfintroduce,jdbcType=VARCHAR},
      userTag = #{usertag,jdbcType=VARCHAR},
      university = #{university,jdbcType=VARCHAR},
      collegeYear = #{collegeyear,jdbcType=DATE},
      universityTwo = #{universitytwo,jdbcType=VARCHAR},
      collegeYearTwo = #{collegeyeartwo,jdbcType=DATE},
      company = #{company,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      registerDate = #{registerdate,jdbcType=TIMESTAMP},
      msgPubCount = #{msgpubcount,jdbcType=INTEGER},
      boxCount = #{boxcount,jdbcType=INTEGER},
      fansCount = #{fanscount,jdbcType=INTEGER},
      followCount = #{followcount,jdbcType=INTEGER},
      notSay = #{notsay,jdbcType=TINYINT},
      notSayTime = #{notsaytime,jdbcType=TIMESTAMP},
      canSayTime = #{cansaytime,jdbcType=TIMESTAMP},
      userPhoto = #{userphoto,jdbcType=VARCHAR},
      photoUpload = #{photoupload,jdbcType=TINYINT},
      backupOne = #{backupone,jdbcType=VARCHAR},
      backupTwo = #{backuptwo,jdbcType=VARCHAR},
      backupThree = #{backupthree,jdbcType=VARCHAR},
      backupFour = #{backupfour,jdbcType=VARCHAR},
      backupFive = #{backupfive,jdbcType=INTEGER},
      backupSix = #{backupsix,jdbcType=INTEGER},
      userHelpsMan = #{userhelpsman,jdbcType=INTEGER},
      userDonate = #{userdonate,jdbcType=INTEGER},
      amountAccept = #{amountaccept,jdbcType=INTEGER},
      beHelpTime = #{behelptime,jdbcType=TIMESTAMP},
      beHelpedType = #{behelpedtype,jdbcType=INTEGER},
      backupseven = #{backupseven,jdbcType=VARCHAR},
      backupeight = #{backupeight,jdbcType=VARCHAR},
      backupnine = #{backupnine,jdbcType=VARCHAR},
      backupten = #{backupten,jdbcType=VARCHAR},
      tobeuseone = #{tobeuseone,jdbcType=INTEGER},
      tobeusetwo = #{tobeusetwo,jdbcType=INTEGER},
      tobeusethree = #{tobeusethree,jdbcType=INTEGER},
      cityName = #{cityname,jdbcType=VARCHAR},
      openId = #{openid,jdbcType=VARCHAR},
      userUUID = #{useruuid,jdbcType=VARCHAR}
    where userID = #{userid,jdbcType=BIGINT}
  </update>
</mapper>