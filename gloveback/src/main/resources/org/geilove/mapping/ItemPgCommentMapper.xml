<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.geilove.dao.ItemPgCommentMapper">
  <resultMap id="BaseResultMap" type="org.geilove.pojo.ItemPgComment">
    <id column="itemPgCommentID" jdbcType="BIGINT" property="itempgcommentid" />
    <result column="itemProgressID" jdbcType="BIGINT" property="itemprogressid" />
    <result column="userIDSender" jdbcType="BIGINT" property="useridsender" />
    <result column="userUUIDSender" jdbcType="VARCHAR" property="useruuidsender" />
    <result column="senderNickName" jdbcType="VARCHAR" property="sendernickname" />
    <result column="senderPhoto" jdbcType="VARCHAR" property="senderphoto" />
    <result column="userIDReciver" jdbcType="BIGINT" property="useridreciver" />
    <result column="userUUIDReciver" jdbcType="VARCHAR" property="useruuidreciver" />
    <result column="reciverNickname" jdbcType="VARCHAR" property="recivernickname" />
    <result column="reciverPhoto" jdbcType="VARCHAR" property="reciverphoto" />
    <result column="commentTime" jdbcType="TIMESTAMP" property="commenttime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="refer" jdbcType="INTEGER" property="refer" />
    <result column="backupOne" jdbcType="VARCHAR" property="backupone" />
    <result column="backupTwo" jdbcType="VARCHAR" property="backuptwo" />
    <result column="backupThree" jdbcType="VARCHAR" property="backupthree" />
    <result column="backupFour" jdbcType="VARCHAR" property="backupfour" />
    <result column="backupFive" jdbcType="INTEGER" property="backupfive" />
    <result column="backupSix" jdbcType="INTEGER" property="backupsix" />
  </resultMap>
  <sql id="Base_Column_List">
    itemPgCommentID, itemProgressID, userIDSender, userUUIDSender, senderNickName, senderPhoto, 
    userIDReciver, userUUIDReciver, reciverNickname, reciverPhoto, commentTime, content, 
    refer, backupOne, backupTwo, backupThree, backupFour, backupFive, backupSix
  </sql>

  <!--  自定义，获取"进度更新" 的评论列表-->
  <select id="getItemPgComments" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from
    itemPgComment
    where
    itemProgressID= #{itemProgressiD,jdbcType=BIGINT}
    order by
    commentTime  desc
    limit
    #{page, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}
  </select>
  <!--自定义结束 -->

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from itemPgComment
    where itemPgCommentID = #{itempgcommentid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from itemPgComment
    where itemPgCommentID = #{itempgcommentid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.geilove.pojo.ItemPgComment">
    insert into itemPgComment (itemPgCommentID, itemProgressID, userIDSender, 
      userUUIDSender, senderNickName, senderPhoto, 
      userIDReciver, userUUIDReciver, reciverNickname, 
      reciverPhoto, commentTime, content, 
      refer, backupOne, backupTwo, 
      backupThree, backupFour, backupFive, 
      backupSix)
    values (#{itempgcommentid,jdbcType=BIGINT}, #{itemprogressid,jdbcType=BIGINT}, #{useridsender,jdbcType=BIGINT}, 
      #{useruuidsender,jdbcType=VARCHAR}, #{sendernickname,jdbcType=VARCHAR}, #{senderphoto,jdbcType=VARCHAR}, 
      #{useridreciver,jdbcType=BIGINT}, #{useruuidreciver,jdbcType=VARCHAR}, #{recivernickname,jdbcType=VARCHAR}, 
      #{reciverphoto,jdbcType=VARCHAR}, #{commenttime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, 
      #{refer,jdbcType=INTEGER}, #{backupone,jdbcType=VARCHAR}, #{backuptwo,jdbcType=VARCHAR}, 
      #{backupthree,jdbcType=VARCHAR}, #{backupfour,jdbcType=VARCHAR}, #{backupfive,jdbcType=INTEGER}, 
      #{backupsix,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.geilove.pojo.ItemPgComment">
    insert into itemPgComment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="itempgcommentid != null">
        itemPgCommentID,
      </if>
      <if test="itemprogressid != null">
        itemProgressID,
      </if>
      <if test="useridsender != null">
        userIDSender,
      </if>
      <if test="useruuidsender != null">
        userUUIDSender,
      </if>
      <if test="sendernickname != null">
        senderNickName,
      </if>
      <if test="senderphoto != null">
        senderPhoto,
      </if>
      <if test="useridreciver != null">
        userIDReciver,
      </if>
      <if test="useruuidreciver != null">
        userUUIDReciver,
      </if>
      <if test="recivernickname != null">
        reciverNickname,
      </if>
      <if test="reciverphoto != null">
        reciverPhoto,
      </if>
      <if test="commenttime != null">
        commentTime,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="refer != null">
        refer,
      </if>
      <if test="backupone != null">
        backupOne,
      </if>
      <if test="backuptwo != null">
        backupTwo,
      </if>
      <if test="backupthree != null">
        backupThree,
      </if>
      <if test="backupfour != null">
        backupFour,
      </if>
      <if test="backupfive != null">
        backupFive,
      </if>
      <if test="backupsix != null">
        backupSix,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="itempgcommentid != null">
        #{itempgcommentid,jdbcType=BIGINT},
      </if>
      <if test="itemprogressid != null">
        #{itemprogressid,jdbcType=BIGINT},
      </if>
      <if test="useridsender != null">
        #{useridsender,jdbcType=BIGINT},
      </if>
      <if test="useruuidsender != null">
        #{useruuidsender,jdbcType=VARCHAR},
      </if>
      <if test="sendernickname != null">
        #{sendernickname,jdbcType=VARCHAR},
      </if>
      <if test="senderphoto != null">
        #{senderphoto,jdbcType=VARCHAR},
      </if>
      <if test="useridreciver != null">
        #{useridreciver,jdbcType=BIGINT},
      </if>
      <if test="useruuidreciver != null">
        #{useruuidreciver,jdbcType=VARCHAR},
      </if>
      <if test="recivernickname != null">
        #{recivernickname,jdbcType=VARCHAR},
      </if>
      <if test="reciverphoto != null">
        #{reciverphoto,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null">
        #{commenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="refer != null">
        #{refer,jdbcType=INTEGER},
      </if>
      <if test="backupone != null">
        #{backupone,jdbcType=VARCHAR},
      </if>
      <if test="backuptwo != null">
        #{backuptwo,jdbcType=VARCHAR},
      </if>
      <if test="backupthree != null">
        #{backupthree,jdbcType=VARCHAR},
      </if>
      <if test="backupfour != null">
        #{backupfour,jdbcType=VARCHAR},
      </if>
      <if test="backupfive != null">
        #{backupfive,jdbcType=INTEGER},
      </if>
      <if test="backupsix != null">
        #{backupsix,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.geilove.pojo.ItemPgComment">
    update itemPgComment
    <set>
      <if test="itemprogressid != null">
        itemProgressID = #{itemprogressid,jdbcType=BIGINT},
      </if>
      <if test="useridsender != null">
        userIDSender = #{useridsender,jdbcType=BIGINT},
      </if>
      <if test="useruuidsender != null">
        userUUIDSender = #{useruuidsender,jdbcType=VARCHAR},
      </if>
      <if test="sendernickname != null">
        senderNickName = #{sendernickname,jdbcType=VARCHAR},
      </if>
      <if test="senderphoto != null">
        senderPhoto = #{senderphoto,jdbcType=VARCHAR},
      </if>
      <if test="useridreciver != null">
        userIDReciver = #{useridreciver,jdbcType=BIGINT},
      </if>
      <if test="useruuidreciver != null">
        userUUIDReciver = #{useruuidreciver,jdbcType=VARCHAR},
      </if>
      <if test="recivernickname != null">
        reciverNickname = #{recivernickname,jdbcType=VARCHAR},
      </if>
      <if test="reciverphoto != null">
        reciverPhoto = #{reciverphoto,jdbcType=VARCHAR},
      </if>
      <if test="commenttime != null">
        commentTime = #{commenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="refer != null">
        refer = #{refer,jdbcType=INTEGER},
      </if>
      <if test="backupone != null">
        backupOne = #{backupone,jdbcType=VARCHAR},
      </if>
      <if test="backuptwo != null">
        backupTwo = #{backuptwo,jdbcType=VARCHAR},
      </if>
      <if test="backupthree != null">
        backupThree = #{backupthree,jdbcType=VARCHAR},
      </if>
      <if test="backupfour != null">
        backupFour = #{backupfour,jdbcType=VARCHAR},
      </if>
      <if test="backupfive != null">
        backupFive = #{backupfive,jdbcType=INTEGER},
      </if>
      <if test="backupsix != null">
        backupSix = #{backupsix,jdbcType=INTEGER},
      </if>
    </set>
    where itemPgCommentID = #{itempgcommentid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.geilove.pojo.ItemPgComment">
    update itemPgComment
    set itemProgressID = #{itemprogressid,jdbcType=BIGINT},
      userIDSender = #{useridsender,jdbcType=BIGINT},
      userUUIDSender = #{useruuidsender,jdbcType=VARCHAR},
      senderNickName = #{sendernickname,jdbcType=VARCHAR},
      senderPhoto = #{senderphoto,jdbcType=VARCHAR},
      userIDReciver = #{useridreciver,jdbcType=BIGINT},
      userUUIDReciver = #{useruuidreciver,jdbcType=VARCHAR},
      reciverNickname = #{recivernickname,jdbcType=VARCHAR},
      reciverPhoto = #{reciverphoto,jdbcType=VARCHAR},
      commentTime = #{commenttime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      refer = #{refer,jdbcType=INTEGER},
      backupOne = #{backupone,jdbcType=VARCHAR},
      backupTwo = #{backuptwo,jdbcType=VARCHAR},
      backupThree = #{backupthree,jdbcType=VARCHAR},
      backupFour = #{backupfour,jdbcType=VARCHAR},
      backupFive = #{backupfive,jdbcType=INTEGER},
      backupSix = #{backupsix,jdbcType=INTEGER}
    where itemPgCommentID = #{itempgcommentid,jdbcType=BIGINT}
  </update>

</mapper>